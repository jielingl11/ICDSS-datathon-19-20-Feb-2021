{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "centered-valuable",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import geopandas as gpd\n",
    "import sklearn\n",
    "import csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "peripheral-bailey",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"Data/boston_corrected_raw.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "common-thanks",
   "metadata": {},
   "outputs": [],
   "source": [
    "param_list = ['TOWNNO','TRACT','LON','LAT','MEDV','CMEDV','CRIM','ZN','INDUS','CHAS','NOX','RM','AGE','DIS','RAD','TAX','PTRATIO','B','LSTAT']\n",
    "param_list_pruned = ['LON','LAT','CMEDV','CRIM','ZN','INDUS','CHAS','NOX','RM','AGE','DIS','RAD','TAX','PTRATIO','B','LSTAT']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "presidential-turning",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7f642c180dd0>]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# fig, axs = plt.subplots(19,19)\n",
    "# plt.figure(figsize = (7*len(param_list),7*len(param_list)))\n",
    "# for i in param_list:\n",
    "#     for j in param_list:\n",
    "#         axs[param_list.index(i)][param_list.index(j)].plot(df[i],df[j])\n",
    "# fig.savefig('plots.png')\n",
    "plt.plot(df['TOWNNO'],df['ZN'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "excited-future",
   "metadata": {},
   "source": [
    "# HELLO THIS IS A TITLE\n",
    "\n",
    "Hello this is text, this is an equation $\\int x^2 dx$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "verbal-borough",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = df['PTRATIO']\n",
    "y = df['CMEDV']\n",
    "\n",
    "lobf, cov = np.polyfit(x, y, 1, cov=True)\n",
    "line_fit = np.poly1d(lobf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "palestinian-research",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[-2.14463117 62.10916633] [[ 0.02656578 -0.49028565]\n",
      " [-0.49028565  9.1727507 ]]\n"
     ]
    }
   ],
   "source": [
    "print(lobf,cov)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "advanced-ethics",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7f642ac5ff50>]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x,y)\n",
    "plt.plot(x,line_fit(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "forbidden-inspiration",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.        , -0.50565462],\n",
       "       [-0.50565462,  1.        ]])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.corrcoef(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "retained-trance",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-0.5056546189523787\n"
     ]
    }
   ],
   "source": [
    "print(np.corrcoef(x,y)[0,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "proud-trailer",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "506\n"
     ]
    }
   ],
   "source": [
    "print(len(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "lonely-miami",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(-0.5056546189523793, 3.3625110234095492e-34)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from scipy.stats.stats import pearsonr\n",
    "pearsonr(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "cheap-crossing",
   "metadata": {},
   "outputs": [],
   "source": [
    "def hypothesis_tester(crit):\n",
    "    init_list = []\n",
    "    for i in param_list_pruned:\n",
    "        for j in param_list_pruned:\n",
    "            if i != j:\n",
    "                p_val = pearsonr(df[i],df[j])[1]\n",
    "                r = pearsonr(df[i],df[j])[0]\n",
    "                if p_val < crit:\n",
    "                    if r > 0:\n",
    "                        p_or_n = \"positive\"\n",
    "                    else:\n",
    "                        p_or_n = \"negative\"\n",
    "                    init_list.append([r,abs(r),p_or_n,i,j])\n",
    "    return init_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "charitable-vienna",
   "metadata": {},
   "outputs": [],
   "source": [
    "header = [\"r\",\"abs(r)\", \"positive or negative\", \"first variable\", \"second variable\"]\n",
    "with open('1e-5_tests.csv', 'w') as f: \n",
    "    write = csv.writer(f) \n",
    "    write.writerow(header) \n",
    "    write.writerows(hypothesis_tester(1e-5)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "framed-claim",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "widespread-radius",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
